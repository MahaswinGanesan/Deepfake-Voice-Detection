# -*- coding: utf-8 -*-
"""Data cleaning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A443KugytduIQKAmk9k-NkS4R_FPpFBQ
"""
import os
import librosa
import numpy as np
import noisereduce as nr
import soundfile as sf
from pydub import AudioSegment
from google.colab import drive

drive.mount('/content/drive')

input_folder = "/content/drive/MyDrive/sample_fake_2000"
output_folder = "/content/drive/MyDrive/cleaned_fake_2000"
os.makedirs(output_folder, exist_ok=True)

def remove_background_noise_and_trim_silence(input_path, output_path, silence_thresh=-40, min_silence_len=500):

    try:
        y, sr = librosa.load(input_path, sr=None)
    except Exception as e:
        print(f"Error loading {input_path}: {e}")
        return

    reduced_noise = nr.reduce_noise(y=y, sr=sr, prop_decrease=0.8)

    temp_wav_path = "/tmp/temp_audio.wav"
    sf.write(temp_wav_path, reduced_noise, sr)

    audio = AudioSegment.from_wav(temp_wav_path)

    def trim_silence(audio, silence_thresh=-40, min_silence_len=500):
        start_trim = detect_leading_silence(audio, silence_thresh)
        end_trim = detect_leading_silence(audio.reverse(), silence_thresh)
        duration = len(audio)

        trimmed_audio = audio[start_trim:duration - end_trim] if start_trim < duration - end_trim else audio
        return trimmed_audio

    def detect_leading_silence(sound, silence_threshold=-40.0):
        trim_ms = 0
        while trim_ms < len(sound) and sound[trim_ms:trim_ms+1].dBFS < silence_threshold:
            trim_ms += 1
        return trim_ms

    cleaned_audio = trim_silence(audio, silence_thresh, min_silence_len)

    cleaned_audio.export(output_path, format="flac")
    print(f"Processed: {os.path.basename(output_path)}")

for file in os.listdir(input_folder):
    if file.endswith(".flac"):
        input_path = os.path.join(input_folder, file)
        output_path = os.path.join(output_folder, file)
        remove_background_noise_and_trim_silence(input_path, output_path)

print(f"All audio files processed! Cleaned files saved in: {output_folder}")

